name: Changelog Generation

on:
  workflow_dispatch:
  release:
    types:
      - published

jobs:
  send_changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for changelog generation

      - name: Read Last Commit Hash from .last_commit
        run: |
          if [ -f .last_commit ]; then
            LAST_COMMIT_HASH=$(cat .last_commit)
          else
            LAST_COMMIT_HASH=$(git rev-list --max-parents=0 HEAD)
          fi
          echo "LAST_COMMIT_HASH=$LAST_COMMIT_HASH" >> $GITHUB_ENV

      - name: Read Version from VERSION file
        run: |
          VERSION=$(cat VERSION)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Generate Changelog
        run: |
          echo "## Changelog for Version $VERSION" > changelog.md
          echo "" >> changelog.md

          declare -A commit_types=( 
            [feat]="🚀 Features"
            [fix]="🛠 Fixes"
            [perf]="⚡ Performance Improvements"
            [refactor]="♻️ Refactoring"
            [docs]="📝 Documentation Updates"
            [style]="🎨 Code Style Changes"
            [test]="🧪 Tests"
            [build]="🏗️ Build Changes"
            [ci]="🔧 CI/CD"
            [chore]="🔨 Miscellaneous"
            [revert]="⏪ Reverts"
            [release]="🚀 Release Updates"
            [workflow]="⚙️ Workflow Changes"
          )

          HAS_CHANGES=0

          for type in "${!commit_types[@]}"; do
            section=${commit_types[$type]}
            commits=$(git log $LAST_COMMIT_HASH..HEAD --grep="^$type:" --pretty=format:"- %h %s (%an, %ad)" --date=format:'%Y-%m-%d %H:%M')

            if [ -n "$commits" ]; then
              echo "### $section" >> changelog.md
              echo "$commits" >> changelog.md
              echo "" >> changelog.md
              HAS_CHANGES=1
            fi
          done

          if [ "$HAS_CHANGES" -eq 0 ]; then
            echo "No relevant commits found for this release. Exiting."
            exit 0
          fi

      - name: Update HISTORY.md
        run: |
          echo "## Changelog for Version $VERSION" >> HISTORY.md
          echo "" >> HISTORY.md
          cat changelog.md >> HISTORY.md

      - name: Update .last_commit file
        run: |
          NEW_LAST_COMMIT_HASH=$(git rev-parse HEAD)
          echo $NEW_LAST_COMMIT_HASH > .last_commit
          git add .last_commit

      - name: Commit and Push Updates
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

          git add HISTORY.md changelog.md .last_commit

          if git diff --staged --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          git commit -m "Update changelog and HISTORY.md for version $VERSION, update .last_commit"
          git push
