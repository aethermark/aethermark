name: Publish to PyPI

on:
  workflow_dispatch:
  release:
    types:
      - published

jobs:
  build-and-publish:
    name: Build and Publish to PyPI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y g++ make cmake

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-dev.txt') }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up virtual environment & install Python deps
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; else pip install setuptools wheel build twine; fi

      - name: Build C++ library
        run: make all

      - name: Build Python package
        run: make build-py

      - name: Check artifacts
        run: .venv/bin/twine check python/dist/*

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: .venv/bin/twine upload python/dist/*
